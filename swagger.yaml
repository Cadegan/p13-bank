swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

# Accounts
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Accounts
      summary: User Acounts API
      description: API for fetching list of accounts
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        # - in: path
        #   name: userId
        #   type: string
        #   description: Numeric ID of the user to get
        #   required: true
        # - in: query
        #   type: string
        #   name: date
        #   format: date
        #   description: Date when the transaction has been created
        #   required: true
      produces:
        - application/json
      responses:
        '200':
          description: List of accounts retrieved successully
          schema:
            $ref: '#/definitions/getAccounts'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

#Create new transaction
    post:
      security:
        - Bearer: []
      tags:
        - User Accounts
      summary: Create Transaction API
      description: API for creating a new transaction
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: userId
          type: string
          description: Numeric ID of the user to get
          required: true
        - in: body
          name: body
          description: Create a transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionDetails"
      produces:
        - application/json
      responses:
        '200':
          description: The transaction was successfully created
          # schema:
          #   $ref:
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

 #Update a transaction
  /user/transactions/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - User Accounts
      summary: Update Transaction API
      description: API for updating a transaction
      responses:
          '200':
            description: The transaction was successfully updated
            # schema:
            #   $ref:
          '400':
            description: Invalid Fields
          '500':
            description: Internal Server Error
      
    

# Models
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  getAccounts:
    type: object
    properties: 
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          accounts:
            type: array
            items:
              properties:
                id:
                  type: integer
                  description: transaction's id
                date:
                  type: string
                  format: date-type
                  description: transaction's date
                description:
                  type: string
                  description: transaction's description
                amount:
                  type: number
                  format : float
                  description: transaction's amount in $
                balance : 
                  type : string
                  description: account balance status
  TransactionDetails:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
        format: date-type
        description: transaction's date
      description:
        type: string
        description: transaction's name
      amount:
        type: number
        format : float
        description: amount in $
      balance : 
        type : string
        description: account balance status